(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./pages/introduction.mdx":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return D});var t=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),m=a.n(t),o=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/classCallCheck.js"),r=a.n(o),p=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/createClass.js"),l=a.n(p),s=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"),c=a.n(s),i=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/getPrototypeOf.js"),d=a.n(i),g=a("./node_modules/docz-core/node_modules/@babel/runtime/helpers/inherits.js"),u=a.n(g),T=a("./node_modules/react/index.js"),E=a.n(T),M=a("./node_modules/@mdx-js/tag/dist/index.js"),D=function(e){function n(e){var a;return r()(this,n),(a=c()(this,d()(n).call(this,e))).layout=null,a}return u()(n,e),l()(n,[{key:"render",value:function(){var e=this.props,n=e.components;m()(e,["components"]);return E.a.createElement(M.MDXTag,{name:"wrapper",components:n},E.a.createElement(M.MDXTag,{name:"h1",components:n,props:{id:"table-of-contents"}},"Table of Contents"),E.a.createElement(M.MDXTag,{name:"ul",components:n},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#installation"}},"Installation"),E.a.createElement(M.MDXTag,{name:"ul",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#meteor"}},"meteor")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#npm"}},"npm")))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#quick-start"}},"Quick start")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#overview"}},"Overview"),E.a.createElement(M.MDXTag,{name:"ul",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#forms-components"}},"Forms components")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#fields-components"}},"Fields components")))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#advanced-topics"}},"Advanced topics"),E.a.createElement(M.MDXTag,{name:"ul",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#forms"}},"Forms"),E.a.createElement(M.MDXTag,{name:"ul",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#asynchronous-validation"}},"Asynchronous validation")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#autosave"}},"Autosave")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#hierarchy"}},"Hierarchy")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#methods"}},"Methods")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#change-reactions"}},"Change reactions")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#model-transformations"}},"Model transformations")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#post-submit-handling"}},"Post-submit handling")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#validation-options-and-modes"}},"Validation options and modes")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-modifierform"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"ModifierForm"))))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#fields"}},"Fields"),E.a.createElement(M.MDXTag,{name:"ul",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#autofield-algorithm"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"AutoField")," algorithm")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#guaranteed-props"}},"Guaranteed props")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#props-propagation"}},"Props propagation")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-compositefield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"CompositeField"))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-customautofield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"CustomAutoField"))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-cyclefield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"CycleField"))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-rangefield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"RangeField"))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-ratingfield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"RatingField"))))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#schemas"}},"Schemas"),E.a.createElement(M.MDXTag,{name:"ul",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#graphql-definition"}},"GraphQL definition")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#json-schema-definition"}},"JSON schema definition")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#simpleschema-definition"}},"SimpleSchema definition")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-mylittleschema"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"MyLittleSchema"))))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#context-data"}},"Context data"),E.a.createElement(M.MDXTag,{name:"ul",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#available-context-data"}},"Available context data")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-displayif"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"DisplayIf"))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-submitbutton"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"SubmitButton"))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#example-swapfield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"SwapField"))))))),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#troubleshooting"}},"Troubleshooting"))),E.a.createElement("br",null),E.a.createElement(M.MDXTag,{name:"h1",components:n,props:{id:"installation"}},"Installation"),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," If you are going to use a themed package - remember to include correct styles!"),E.a.createElement(M.MDXTag,{name:"h2",components:n,props:{id:"meteor"}},"meteor"),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," If you prefer video, there's ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://meteoruniversity.org/"}},"Meteor University")," uniforms session available ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.youtube.com/watch?v=bTHPoghqtS4"}},"here"),"."),E.a.createElement(M.MDXTag,{name:"p",components:n},"These are npm packages, so they can't imply any Meteor package, and you have to install dependencies manually. In your Meteor app directory:"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-shell"}},"# If you are going to use SimpleSchema\n$ meteor add aldeed:simple-schema check\n\n# If you are going to use SimpleSchema@2\n$ meteor npm install simpl-schema\n\n# If you are going to use GraphQL\n$ meteor npm install graphql\n\n# Components (pick one)\n$ meteor npm install --save react react-dom uniforms uniforms-antd\n$ meteor npm install --save react react-dom uniforms uniforms-bootstrap3\n$ meteor npm install --save react react-dom uniforms uniforms-bootstrap4\n$ meteor npm install --save react react-dom uniforms uniforms-material\n$ meteor npm install --save react react-dom uniforms uniforms-semantic\n$ meteor npm install --save react react-dom uniforms uniforms-unstyled\n")),E.a.createElement(M.MDXTag,{name:"h2",components:n,props:{id:"npm"}},"npm"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-shell"}},"# Components (pick one)\n$ npm install --save react react-dom uniforms uniforms-antd\n$ npm install --save react react-dom uniforms uniforms-bootstrap3\n$ npm install --save react react-dom uniforms uniforms-bootstrap4\n$ npm install --save react react-dom uniforms uniforms-material\n$ npm install --save react react-dom uniforms uniforms-semantic\n$ npm install --save react react-dom uniforms uniforms-unstyled\n")),E.a.createElement("br",null),E.a.createElement(M.MDXTag,{name:"h1",components:n,props:{id:"quick-start"}},"Quick start"),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," The following examples are designed to work out of the box in meteor with ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"SimpleSchema")," (a very common schema in the meteor community), but it's not mandatory and you can easily use it without meteor and with different schemas (see: ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"#schemas"}},"Custom Schema"),"). There's also GraphQL and JSON Schema support."),E.a.createElement(M.MDXTag,{name:"p",components:n},"Let's start with defining an example schema:"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"// Choose your theme\nimport AutoForm from 'uniforms-unstyled/AutoForm';\n\n// A compatible schema\nimport PostSchema from './schemas/Post';\n\n// This will render an automatic, validated form, with labelled fields, inline\n// validation and a submit button. If model will be present, form will be filled\n// with appropriate values.\nconst PostForm = ({model}) =>\n    <AutoForm schema={PostSchema} onSubmit={doc => db.save(doc)} model={model} />\n;\n")),E.a.createElement(M.MDXTag,{name:"p",components:n},"That's all! ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"AutoForm")," will generate a complete form with labelled fields, errors list (if any) and a submit button. Also, it will take care of validation and handle model changes."),E.a.createElement(M.MDXTag,{name:"p",components:n},"If you want to have custom layout and/or structure inside your form you can include the form content."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// Choose your theme\nimport AutoField   from 'uniforms-unstyled/AutoField';\nimport AutoForm    from 'uniforms-unstyled/AutoForm';\nimport SubmitField from 'uniforms-unstyled/SubmitField';\nimport TextField   from 'uniforms-unstyled/TextField';\n\n// A compatible schema\nimport PostSchema from './schemas/Post';\n\nconst PostForm = ({model}) =>\n    <AutoForm schema={PostSchema} onSubmit={doc => db.save(doc)} model={model}>\n        <h2>Title</h2>\n\n        <AutoField name=\"fieldA\" />\n        <TextField name=\"fieldB\" />\n\n        <div className=\"super-special-class\">\n            <SubmitField className=\"super-special-class-with-suffix\" />\n        </div>\n    </AutoForm>\n;\n")),E.a.createElement("br",null),E.a.createElement(M.MDXTag,{name:"h1",components:n,props:{id:"overview"}},"Overview"),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," For a full description of components and their props - see ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md"}},"API"),"."),E.a.createElement(M.MDXTag,{name:"h2",components:n,props:{id:"forms-components"}},"Forms components"),E.a.createElement(M.MDXTag,{name:"p",components:n},"Most of the time you'll be using either ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"AutoForm")," or ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ValidatedForm"),", but there are also other form components (rather low-level ones) with different capabilities."),E.a.createElement(M.MDXTag,{name:"table",components:n},E.a.createElement(M.MDXTag,{name:"thead",components:n,parentName:"table"},E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"thead"},E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Component"),E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Self-generated?"),E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Self-managed?"),E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Self-validated?"))),E.a.createElement(M.MDXTag,{name:"tbody",components:n,parentName:"table"},E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"AutoForm")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2714"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2714"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2714")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"BaseForm")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2718"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2718"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2718")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"QuickForm")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2714"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2718"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2718")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"ValidatedForm")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2718"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2718"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2714")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"ValidatedQuickForm")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2714"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2718"),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"\u2714")))),E.a.createElement(M.MDXTag,{name:"h2",components:n,props:{id:"fields-components"}},"Fields components"),E.a.createElement(M.MDXTag,{name:"p",components:n},"This is a guaranteed set of fields - every theme package will implement these, but also can provide additional ones."),E.a.createElement(M.MDXTag,{name:"table",components:n},E.a.createElement(M.MDXTag,{name:"thead",components:n,parentName:"table"},E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"thead"},E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Component"),E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Description"))),E.a.createElement(M.MDXTag,{name:"tbody",components:n,parentName:"table"},E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"AutoField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Automatically renders a given field.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"AutoFields")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Automatically renders given fields.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"BoolField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Checkbox.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"DateField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"HTML5 ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"datetime-local")," input.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"ErrorField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Error message for a given field.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"ErrorsField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Error message with a list of validation errors.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"HiddenField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Hidden field (with possibility to omit in DOM).")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"ListAddField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"An icon with action to add a list item.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"ListDelField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"An icon with action to remove a list item.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"ListField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"List of nested fields.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"ListItemField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Single list item wrapper.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"LongTextField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Textarea.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"NestField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Block of nested fields.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"NumField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Numeric input.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"RadioField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Radio checkbox.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"SelectField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Select (or set of radio checkboxes).")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"SubmitField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Submit button.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"TextField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Text (or any HTML5 compatible) input.")))),E.a.createElement("br",null),E.a.createElement(M.MDXTag,{name:"h1",components:n,props:{id:"advanced-topics"}},"Advanced topics"),E.a.createElement(M.MDXTag,{name:"h2",components:n,props:{id:"forms"}},"Forms"),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"asynchronous-validation"}},"Asynchronous validation"),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ValidatedForm")," (and so ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"AutoForm"),") has an ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onValidate")," prop. It can be used to create an asynchronous validation:"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"const onValidate = (model, error, callback) => {\n    // You can either ignore validation error...\n    if (omitValidation(model)) {\n        return callback(null);\n    }\n\n    // ...or any additional validation if an error is already there...\n    if (error) {\n        return callback();\n    }\n\n    // ...or feed it with another error.\n    MyAPI.validate(model, error => callback(error || null));\n};\n\n// Later...\n\n<ValidatedForm {...props} onValidate={onValidate} />\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"autosave"}},"Autosave"),E.a.createElement(M.MDXTag,{name:"p",components:n},"Every form has an autosave functionality. If you set an ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"autosave")," prop, then every change will trigger a submit. There's also an ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"autosaveDelay")," prop - a minimum time between saves in milliseconds (default: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"0"),")."),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"<AutoForm\n    autosave\n    autosaveDelay={5000} // 5 seconds\n    schema={schema}\n    onSubmit={onSubmit}\n/>\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"hierarchy"}},"Hierarchy"),E.a.createElement("p",{align:"center"},E.a.createElement("img",{src:"uniforms-graph.png"})),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"methods"}},"Methods"),E.a.createElement(M.MDXTag,{name:"p",components:n},"You can use ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://facebook.github.io/react/docs/more-about-refs.html"}},"React ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"ref")," prop")," to manually access form methods. Example usage:"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"const MyForm = ({schema, onSubmit}) => {\n    let formRef;\n\n    return (\n        <section>\n            <AutoForm ref={ref => formRef = ref} schema={schema} onSubmit={onSubmit} />\n            <small onClick={() => formRef.reset()}>\n                Reset\n            </small>\n            <small onClick={() => formRef.submit()}>\n                Submit\n            </small>\n        </section>\n    );\n};\n")),E.a.createElement(M.MDXTag,{name:"p",components:n},"All available methods:"),E.a.createElement(M.MDXTag,{name:"ul",components:n},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"change(key, value)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"reset()")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"submit()")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"validate()")," ",E.a.createElement(M.MDXTag,{name:"em",components:n,parentName:"li"},"(added in ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"em"},"ValidatedForm"),")"))),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"change-reactions"}},"Change reactions"),E.a.createElement(M.MDXTag,{name:"p",components:n},"If you want to make one field to influence others, simply extend ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"AutoForm")," and override ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onChange")," method."),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"class ChainForm extends AutoForm {\n    onChange (key, value) {\n        if (key === 'key_to_intercept') return;\n        if (key === 'key_to_translate') return super.onChange('another_key', value);\n        if (key === 'key_to_mutate') {\n            super.onChange('another_key1', value * 2);\n            super.onChange('another_key2', value / 2);\n            return;\n        }\n\n        super.onChange(key, value);\n    }\n}\n")),E.a.createElement(M.MDXTag,{name:"p",components:n}," It can be easily applied multiple times to make your forms even more reusable."),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"const withMultipliedField = (fieldA, fieldB, Form) =>\nclass withMultipliedFieldForm extends Form {\n    onChange (key, value) {\n        // Multiply fieldA\n        if (key === fieldA)\n            super.onChange(fieldB, value + value);\n\n        // Pass every change\n        super.onChange(key, value);\n    }\n};\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"model-transformations"}},"Model transformations"),E.a.createElement(M.MDXTag,{name:"p",components:n},"If you need to transform model before it will be validated, submitted or passed down to the fields, there's a ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"modelTransform")," prop, which should be used in those use cases."),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"<AutoForm\n    // Do not mutate given model!\n    modelTransform={(mode, model) => {\n        // This model will be passed to the fields.\n        if (mode === 'form') {/* ... */}\n\n        // This model will be submitted.\n        if (mode === 'submit') {/* ... */}\n\n        // This model will be validated.\n        if (mode === 'validate') {/* ... */}\n\n        // Otherwise, return unaltered model.\n        return model;\n    }}\n    onSubmit={onSubmit}\n    schema={schema}\n/>\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"post-submit-handling"}},"Post-submit handling"),E.a.createElement(M.MDXTag,{name:"p",components:n},"It's a good UX practice to tell your users that something failed or succeed. To make it simpler, there are ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onSubmitFailure")," and ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onSubmitSuccess")," props."),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"<AutoForm\n    schema={schema}\n    onSubmit={doc => db.saveThatReturnsPromise(doc)}\n    onSubmitSuccess={() => alert('Promise resolved!')}\n    onSubmitFailure={() => alert('Promise rejected!')}\n/>\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"validation-options-and-modes"}},"Validation options and modes"),E.a.createElement(M.MDXTag,{name:"p",components:n},"Any form can be validated in one those three styles:"),E.a.createElement(M.MDXTag,{name:"ul",components:n},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"p",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onChange"),"\nValidate on every change.")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"p",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onChangeAfterSubmit")," ",E.a.createElement(M.MDXTag,{name:"em",components:n,parentName:"p"},"(default)"),"\nValidate on every change, but only after first submit.")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"p",components:n,parentName:"li"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"onSubmit"),"\nValidate on every submit."))),E.a.createElement(M.MDXTag,{name:"p",components:n},"If your schema validator accepts any options, those can be passed in ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"validator")," prop."),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},'<AutoForm\n    validate="onChange"\n    validator={validatorOptions}\n    schema={schema}\n    onSubmit={onSubmit}\n/>\n')),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-modifierform"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"ModifierForm")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import BaseForm from 'uniforms/BaseForm';\n\n// In uniforms, every form is just an injectable set of functionalities. Thus,\n// we can live without many higher order components, using composed ones\n// instead. If you want to get a deeper dive into it, read the source of\n// AutoForm or QuickForm in the core package.\nconst Modifier = parent => class extends parent {\n    // Expose injector.\n    //   It's not required, but recommended.\n    static Modifier = Modifier;\n\n    // Alter component display name.\n    //   It's not required, but recommended.\n    static displayName = `Modifier${parent.displayName}`;\n\n    // Here you can override any form methods or create additional ones.\n    getModel (mode) {\n        if (mode === 'submit') {\n            const doc  = super.getModel('submit');\n            const keys = this.getChildContextSchema().getSubfields();\n\n            const update = keys.filter(key => doc[key] !== undefined);\n            const remove = keys.filter(key => doc[key] === undefined);\n\n            // It's a good idea to omit empty modifiers.\n            const $set   = update.reduce((acc, key) => ({...acc, [key]: doc[key]}), {});\n            const $unset = remove.reduce((acc, key) => ({...acc, [key]: ''}), {});\n\n            return {$set, $unset};\n        }\n\n        return super.getModel(mode);\n    }\n};\n\n// Now we have to inject our functionality. This one is a ModifierForm. Use any\n// form component you want.\nexport default Modifier(BaseForm);\n")),E.a.createElement(M.MDXTag,{name:"h2",components:n,props:{id:"fields"}},"Fields"),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"autofield-algorithm"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"AutoField")," algorithm"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"let component = props.component;\nif (component === undefined) {\n    if (props.allowedValues) {\n        if (props.checkboxes && props.fieldType !== Array) {\n            component = RadioField;\n        } else {\n            component = SelectField;\n        }\n    } else {\n        switch (props.fieldType) {\n            case Date:    component = DateField; break;\n            case Array:   component = ListField; break;\n            case Number:  component = NumField;  break;\n            case Object:  component = NestField; break;\n            case String:  component = TextField; break;\n            case Boolean: component = BoolField; break;\n        }\n\n        invariant(component, 'Unsupported field type: %s', props.fieldType.toString());\n    }\n}\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"guaranteed-props"}},"Guaranteed props"),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," These are ",E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"not")," the only props that a field will receive - these are guaranteed for all fields created with ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper."),E.a.createElement(M.MDXTag,{name:"table",components:n},E.a.createElement(M.MDXTag,{name:"thead",components:n,parentName:"table"},E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"thead"},E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Name"),E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Type"),E.a.createElement(M.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:"center"}},"Description"))),E.a.createElement(M.MDXTag,{name:"tbody",components:n,parentName:"table"},E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"changed")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"bool")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Has field changed?")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"disabled")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"bool")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Is field disabled?")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"error")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"object")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field scoped part of validation error.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"errorMessage")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field scoped validation error message.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"field")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"object")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field definition from schema.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"fields")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"arrayOf(string)")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Subfields names.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"fieldType")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field type.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"findError")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func(name)")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Request another field error.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"findField")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func(name)")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Request another field field.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"findValue")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func(name)")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Request another field value.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"id")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field id - given or random.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"label")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field label.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"name")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field name.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"onChange")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"func(value, [name])")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Change field value.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"parent")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"object")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Parent field props.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"placeholder")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"string")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field placeholder.")),E.a.createElement(M.MDXTag,{name:"tr",components:n,parentName:"tbody"},E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"value")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"any")),E.a.createElement(M.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:"center"}},"Field value.")))),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"props-propagation"}},"Props propagation"),E.a.createElement(M.MDXTag,{name:"p",components:n},"Few props propagate in a very special way. These are ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"label"),", ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"placeholder")," and ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"disabled"),"."),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},'<TextField />                    // default label | no      placeholder\n<TextField label="Text" />       // custom  label | no      placeholder\n<TextField label={false} />      // no      label | no      placeholder\n<TextField placeholder />        // default label | default placeholder\n<TextField placeholder="Text" /> // default label | custom  placeholder\n\n<NestField label={null}> // null = no label but the children have their labels\n    <TextField />\n</NestField>\n\n<NestField label={false}> // false = no label and the children have no labels\n    <TextField />\n</NestField>\n\n<ListField name="authors" disabled>          // Additions are disabled...\n    <ListItemField name="$" disabled>        // ...deletion too\n        <NestField disabled={false} name=""> // ...but editing is not.\n            <TextField name="name" />\n            <NumField  name="age" />\n        </NestField>\n    </ListItemField>\n</ListField>\n')),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"label"),", ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"placeholder")," and ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"disabled")," are cast to ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Boolean")," before being passed to nested fields."),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-compositefield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"CompositeField")),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import AutoField    from 'uniforms/AutoField';\nimport React        from 'react';\nimport connectField from 'uniforms/connectField';\n\n// This field is a kind of a shortcut for few fields. You can also access all\n// field props here, like value or onChange for some extra logic.\nconst Composite = () =>\n    <section>\n        <AutoField field=\"firstName\" />\n        <AutoField field=\"lastName\" />\n        <AutoField field=\"age\" />\n    </section>\n;\n\nexport default connectField(Composite);\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-customautofield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"CustomAutoField")),E.a.createElement(M.MDXTag,{name:"p",components:n},"These are two ",E.a.createElement(M.MDXTag,{name:"em",components:n,parentName:"p"},"standard")," options to define a custom ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"AutoField"),": either using ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," or simply taking the code from the ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/packages/uniforms-unstyled/src/AutoField.js#L14-L47"}},"original one")," ",E.a.createElement(M.MDXTag,{name:"em",components:n,parentName:"p"},"(theme doesn't matter)")," and simply apply own components and/or rules to render components. Below an example with ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField"),"."),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"// Remember to choose a correct theme package\nimport AutoField from 'uniforms-unstyled/AutoField';\n\nconst CustomAuto = props => {\n    // This way we don't care about unhandled cases - we use default\n    // AutoField as a fallback component.\n    const Component = determineComponentFromProps(props) || AutoField;\n\n    return (\n        <Component {...props} />\n    );\n};\n\nconst CustomAutoField = connectField(CustomAuto, {\n    ensureValue:    false,\n    includeInChain: false,\n    initialValue:   false\n});\n")),E.a.createElement(M.MDXTag,{name:"p",components:n},"You can also tell your ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"AutoForm"),"/",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"QuickForm"),"/",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ValidatedQuickForm")," to use it."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"<AutoForm {...props} autoField={CustomAutoField} />\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-cyclefield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"CycleField")),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import React        from 'react';\nimport classnames   from 'classnames';\nimport connectField from 'uniforms/connectField';\n\n// This field works as follows: iterate all allowed values and optionally no-value\n// state if the field is not required. This one uses Semantic-UI.\nconst Cycle = ({allowedValues, disabled, label, required, value, onChange}) =>\n    <a\n        className={classnames('ui', !value && 'basic', 'label')}\n        onClick={() =>\n            onChange(value\n                ? allowedValues.indexOf(value) === allowedValues.length - 1\n                    ? required\n                        ? allowedValues[0]\n                        : null\n                    : allowedValues[allowedValues.indexOf(value) + 1]\n                : allowedValues[0]\n            )\n        }\n    >\n        {value || label}\n    </a>\n;\n\nexport default connectField(Cycle);\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-rangefield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"RangeField")),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import React        from 'react';\nimport connectField from 'uniforms/connectField';\n\n// This field works as follows: two datepickers are bound to each other. Value is\n// a {start, stop} object.\nconst Range = ({onChange, value: {start, stop}}) =>\n    <section>\n        <DatePicker max={stop}  value={start} onChange={start => onChange(start, stop)} />\n        <DatePicker min={start} value={stop}  onChange={stop  => onChange(start, stop)} />\n    </section>\n;\n\nexport default connectField(Range);\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-ratingfield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"RatingField")),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This example uses ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"connectField")," helper. To read more see ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#connectfield"}},"API"),"."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import React        from 'react';\nimport classnames   from 'classnames';\nimport connectField from 'uniforms/connectField';\n\n// This field works as follows: render stars for each rating and mark them as\n// filled, if rating (value) is greater. This one uses Semantic-UI.\nconst Rating = ({className, disabled, max = 5, required, value, onChange}) =>\n    <section className={classnames('ui', {disabled, required}, className, 'rating')}>\n        {[...Array(max)].map((_, index) => index + 1).map(index =>\n            <i\n                key={index}\n                className={classnames(index <= value && 'active', 'icon')}\n                onClick={() => disabled || onChange(!required && value === index ? null : index)}\n            />\n        )}\n    </section>\n;\n\nexport default connectField(Rating);\n")),E.a.createElement(M.MDXTag,{name:"h2",components:n,props:{id:"schemas"}},"Schemas"),E.a.createElement(M.MDXTag,{name:"p",components:n},"To make use of any schema, uniforms have to create a ",E.a.createElement(M.MDXTag,{name:"em",components:n,parentName:"p"},"bridge")," of it - a unified schema mapper. A bridge is (preferably) a subclass of ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Bridge"),", implementing static ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"check(schema)")," method and these instance methods:"),E.a.createElement(M.MDXTag,{name:"ul",components:n},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getError(name, error)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getErrorMessage(name, error)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getErrorMessages(error)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getField(name)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getInitialValue(name, props)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getProps(name, props)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getSubfields(name)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getType(name)")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getValidator(options)"))),E.a.createElement(M.MDXTag,{name:"p",components:n},"Currently built-in bridges:"),E.a.createElement(M.MDXTag,{name:"ul",components:n},E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"GraphQLBridge")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"SimpleSchemaBridge")),E.a.createElement(M.MDXTag,{name:"li",components:n,parentName:"ul"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"SimpleSchema2Bridge"))),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," To read more see ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/API.md#bridge"}},"API")," and ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/vazco/uniforms/blob/master/packages/uniforms/src/Bridge.js"}},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"Bridge")),"."),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"graphql-definition"}},"GraphQL definition"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import GraphQLBridge    from 'uniforms/GraphQLBridge';\nimport {buildASTSchema} from 'graphql';\nimport {parse}          from 'graphql';\n\nconst schema = `\n    type Author {\n        id:        String!\n        firstName: String\n        lastName:  String\n    }\n\n    type Post {\n        id:     Int!\n        author: Author!\n        title:  String\n        votes:  Int\n    }\n\n    # This is required by buildASTSchema\n    type Query { anything: ID }\n`;\n\nconst schemaType = buildASTSchema(parse(schema)).getType('Post');\nconst schemaData = {\n    id: {\n        allowedValues: [1, 2, 3]\n    },\n    title: {\n        options: [\n            {label: 1, value: 'a'},\n            {label: 2, value: 'b'}\n        ]\n    }\n};\n\nconst schemaValidator = model => {\n    const details = [];\n\n    if (!model.id) {\n        details.push({name: 'id', message: 'ID is required!'});\n    }\n\n    // ...\n\n    if (details.length) {\n        throw {details};\n    }\n};\n\nconst bridge = new GraphQLBridge(schemaType, schemaValidator, schemaData);\n\n// Later...\n\n<ValidatedForm schema={bridge} />\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"json-schema-definition"}},"JSON schema definition"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import Ajv              from 'ajv';\nimport JSONSchemaBridge from 'uniforms/JSONSchemaBridge';\n\nconst schema = {\n    title: 'Person',\n    type: 'object',\n    properties: {\n        firstName: {\n            type: 'string'\n        },\n        lastName: {\n            type: 'string'\n        },\n        age: {\n            description: 'Age in years',\n            type: 'integer',\n            minimum: 0\n        }\n    },\n    required: ['firstName', 'lastName']\n};\n\nconst validator = new Ajv({allErrors: true, useDefaults: true}).compile(schema);\n\nconst schemaValidator = model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n        throw {details: validator.errors};\n    }\n};\n\nconst bridge = new JSONSchemaBridge(schema, schemaValidator);\n\n// Later...\n\n<ValidatedForm schema={bridge} />\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"simpleschema-definition"}},"SimpleSchema definition"),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," remember to import ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"uniforms")," packages first."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"const PersonSchema = new SimpleSchema({\n    // ...\n\n    aboutMe: {\n        type: String,\n        uniforms: MyText       // Component...\n        uniforms: {            // ...or object...\n            component: MyText, // ...with component...\n            propA: 1           // ...and/or extra props.\n        }\n    }\n});\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-mylittleschema"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"MyLittleSchema")),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Note:")," This is a very basic schema just to show how it works and how you can create your own schema bridges."),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import Bridge from 'uniforms/Bridge';\n\nclass MyLittleSchema extends Bridge {\n    constructor (schema, validator) {\n        super();\n\n        this.schema    = schema;\n        this.validator = validator;\n    }\n\n    getError (name, error) {\n        return error && error[name];\n    }\n\n    getErrorMessage (name, error) {\n        return error && error[name];\n    }\n\n    getErrorMessages (error) {\n        return error\n            ? Object.keys(this.schema).map(field => error[field])\n            : [];\n    }\n\n    getField (name) {\n        return this.schema[name.replace(/.d+/g, '.$')];\n    }\n\n    getType (name) {\n        return this.schema[name.replace(/.d+/g, '.$')].__type__;\n    }\n\n    getProps (name) {\n        return this.schema[name.replace(/.d+/g, '.$')];\n    }\n\n    getInitialValue (name) {\n        return this.schema[name.replace(/.d+/g, '.$')].initialValue;\n    }\n\n    getSubfields (name) {\n        return name\n            ? this.schema[name.replace(/.d+/g, '.$')].subfields || []\n            : Object.keys(this.schema).filter(field => field.indexOf('.') === -1);\n    }\n\n    getValidator () {\n        return this.validator;\n    }\n}\n\nconst bridge = new MyLittleSchema({\n    login:     {__type__: String, required: true, initialValue: '', label: 'Login'},\n    password1: {__type__: String, required: true, initialValue: '', label: 'Password'},\n    password2: {__type__: String, required: true, initialValue: '', label: 'Password (again)'}\n}, model => {\n    const error = {};\n\n    if (!model.login) {\n        error.login = 'Login is required!';\n    } else if (model.login.length < 5) {\n        error.login = 'Login has to be at least 5 characters long!';\n    }\n\n    if (!model.password1) {\n        error.password1 = 'Password is required!';\n    } else if (model.password1.length < 10) {\n        error.login = 'Password has to be at least 10 characters long!';\n    }\n\n    if (model.password1 !== model.password2) {\n        error.password1 = 'Passwords mismatch!';\n    }\n\n    if (Object.keys(error).length) {\n        throw error;\n    }\n});\n\n<AutoForm schema={bridge} />\n")),E.a.createElement(M.MDXTag,{name:"h2",components:n,props:{id:"context-data"}},"Context data"),E.a.createElement(M.MDXTag,{name:"p",components:n},"Some components might need to know a current form state. All this data is passed as ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"uniforms")," in ",E.a.createElement(M.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://facebook.github.io/react/docs/context.html"}},"React context"),"."),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"available-context-data"}},"Available context data"),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"MyComponentUsingUniformsContext.contextTypes = {\n    uniforms: PropTypes.shape({\n        name: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        error: PropTypes.any,\n        model: PropTypes.object.isRequired,\n\n        schema: PropTypes.shape({\n            getError:         PropTypes.func.isRequired,\n            getErrorMessage:  PropTypes.func.isRequired,\n            getErrorMessages: PropTypes.func.isRequired,\n            getField:         PropTypes.func.isRequired,\n            getInitialValue:  PropTypes.func.isRequired,\n            getProps:         PropTypes.func.isRequired,\n            getSubfields:     PropTypes.func.isRequired,\n            getType:          PropTypes.func.isRequired,\n            getValidator:     PropTypes.func.isRequired\n        }).isRequired,\n\n        state: PropTypes.shape({\n            changed:    PropTypes.bool.isRequired,\n            changedMap: PropTypes.object.isRequired,\n            submitting: PropTypes.bool.isRequired,\n\n            label:       PropTypes.bool.isRequired,\n            disabled:    PropTypes.bool.isRequired,\n            placeholder: PropTypes.bool.isRequired\n        }).isRequired,\n\n        onChange: PropTypes.func.isRequired,\n        randomId: PropTypes.func.isRequired\n    }).isRequired\n};\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-displayif"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"DisplayIf")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import BaseField  from 'uniforms/BaseField';\nimport nothing    from 'uniforms/nothing';\nimport {Children} from 'react';\n\n// We have to ensure that there's only one child, because returning an array\n// from a component is prohibited.\nconst DisplayIf = ({children, condition}, {uniforms}) =>\n    condition(uniforms)\n        ? Children.only(children)\n        : nothing\n;\n\nDisplayIf.contextTypes = BaseField.contextTypes;\n\nexport default DisplayIf;\n")),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},'const ThreeStepForm = ({schema}) =>\n    <AutoForm schema={schema}>\n        <TextField name="fieldA" />\n\n        <DisplayIf condition={context => context.model.fieldA}>\n            <section>\n                <TextField name="fieldB" />\n\n                <DisplayIf condition={context => context.model.fieldB}>\n                    <span>\n                        Well done!\n                    </span>\n                </DisplayIf>\n            </section>\n        </DisplayIf>\n    </AutoForm>\n;\n')),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-submitbutton"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"SubmitButton")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import BaseField      from 'uniforms/BaseField';\nimport React          from 'react';\nimport filterDOMProps from 'uniforms/filterDOMProps';\n\n// This field works as follows: render standard submit field and disable it, when\n// the form is invalid. It's a simplified version of a default SubmitField from\n// uniforms-unstyled.\nconst SubmitField = (props, {uniforms: {error, state: {disabled, submitting, validating}}}) =>\n    <input disabled={!!(error || disabled || submitting || validating)} type=\"submit\" />\n;\n\nSubmitField.contextTypes = BaseField.contextTypes;\n\nexport default SubmitField;\n")),E.a.createElement(M.MDXTag,{name:"h3",components:n,props:{id:"example-swapfield"}},"Example: ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"SwapField")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import BaseField      from 'uniforms/BaseField';\nimport get            from 'lodash/get';\nimport {Children}     from 'react';\nimport {cloneElement} from 'react';\n\n// This field works as follows: on click of its child it swaps values of fieldA\n// and fieldB. It's that simple.\nconst SwapField = ({children, fieldA, fieldB}, {uniforms: {model, onChange}}) =>\n    cloneElement(Children.only(children), {\n        onClick () {\n            const valueA = get(model, fieldA);\n            const valueB = get(model, fieldB);\n\n            onChange(fieldA, valueB);\n            onChange(fieldB, valueA);\n        }\n    })\n;\n\nSwapField.contextTypes = BaseField.contextTypes;\n\nexport default SwapField;\n")),E.a.createElement(M.MDXTag,{name:"p",components:n},E.a.createElement(M.MDXTag,{name:"strong",components:n,parentName:"p"},"Example:")),E.a.createElement(M.MDXTag,{name:"pre",components:n},E.a.createElement(M.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},'<section>\n    <TextField name="firstName" />\n    <SwapField fieldA="firstName" fieldB="lastName">\n        <Icon name="refresh" />\n    </SwapField>\n    <TextField name="lastName" />\n</section>\n')),E.a.createElement("br",null),E.a.createElement(M.MDXTag,{name:"h1",components:n,props:{id:"troubleshooting"}},"Troubleshooting"),E.a.createElement(M.MDXTag,{name:"blockquote",components:n},E.a.createElement(M.MDXTag,{name:"p",components:n,parentName:"blockquote"},E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},'The specified value "..." is not a valid email address.'))),E.a.createElement(M.MDXTag,{name:"p",components:n},"Your browser is trying to do its best. Those warnings are harmless yet currently there's no way to get rid of them, other than by downgrading to React ",E.a.createElement(M.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"15.1.0")," or using a different browser."))}}]),n}(E.a.Component)}}]);
//# sourceMappingURL=pages-introduction.9e55d7d1c4555fdc03cc.js.map